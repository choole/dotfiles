"use strict";(self.webpackChunknotion_next=self.webpackChunknotion_next||[]).push([[1346],{34236:(e,t,o)=>{o.r(t),o.d(t,{ConfirmOverwriteModal:()=>y});var a=o(23174),l=o.n(a),i=o(67294),n=o(24405),r=o(53397),s=o(5366),d=o(97880),p=o(82990),c=o(53953),u=o(89728);function y(e){let{open:t,onClose:o,onConfirm:a,propertyName:y,collectionName:f,sourceAction:g}=e;window.__c={n:"ConfirmOverwriteModal"};const m=(0,n.yK)((e=>({closeButtonWrapperStyle:{display:"flex",justifyContent:"flex-end"},closeButtonStyle:{fontWeight:500,cursor:"pointer",alignItems:"center",borderRadius:"50%",backgroundColor:e.buttonHoveredBackground,fontSize:14,height:18,width:18,display:"flex",justifyContent:"center",color:e.lightIconColor},syncButtonStyle:{display:"flex",justifyContent:"center",userSelect:"none"},headerStyle:{fontSize:14,paddingTop:6,textAlign:"center",fontWeight:600,userSelect:"none"},lightDescriptionTextStyle:{color:e.mediumTextColor,textAlign:"center",paddingTop:8,fontWeight:400,userSelect:"none",fontSize:12},mainDescriptionTextStyle:{paddingTop:4,textAlign:"center",fontWeight:500,userSelect:"none",fontSize:12},aiPurpleColor:{color:e.aiPurpleColor},confirmButtonWrap:{border:`1px solid ${e.outlineButtonBorder}`,marginTop:20,paddingX:180,display:"flex",justifyContent:"center",cursor:"pointer",height:32},confirmButton:{...p.Z.textOverflowStyle},cancelButtonStyle:{display:"flex",justifyContent:"center",fontWeight:500,color:e.lightTextColor,paddingTop:16,cursor:"pointer",fontSize:12}})),[]);let v,h,S;"auto_update"===g?(v=l()(s.FormattedMessage,{defaultMessage:"{hasPropertyName, select, true {Turn on auto-update for “{propertyName}”?} other {Turn on auto-update for this property?}}",id:"database.viewSettings.propertyTab.aiAutofill.confirmOverwriteModal.turnonAutoUpdate",values:{hasPropertyName:Boolean(y),propertyName:y}}),h=l()(s.FormattedMessage,{defaultMessage:"The property value will be updated a few minutes after significant page edits.",id:"database.viewSettings.propertyTab.aiAutofill.confirmOverwriteModal.propertyValueUpdated"}),S=l()(s.FormattedMessage,{defaultMessage:"Turn on auto-update",id:"database.viewSettings.propertyTab.aiAutofill.confirmOverwriteModal.TurnOnAutoUpdates"})):"fill_all_pages"===g?(v=l()(s.FormattedMessage,{defaultMessage:"{hasNames, select, true {Update “{propertyName}” for all pages in “{collectionName}”?} other {Update this property for all pages?}}",id:"database.viewSettings.propertyTab.aiAutofill.confirmOverwriteModal.updateAllPages",values:{hasNames:Boolean(y)&&Boolean(f),propertyName:y,collectionName:f}}),S=l()(s.FormattedMessage,{defaultMessage:"{hasCollectionName, select, true {Update all pages in {collectionName}} other {Update all pages}}",id:"database.viewSettings.propertyTab.aiAutofill.confirmOverwriteModal.updateAllPagesButton",values:{hasCollectionName:Boolean(f),collectionName:f}})):(0,d.t1)(g);const w=(0,i.useCallback)((()=>l()("div",{style:{padding:24,width:300}},void 0,l()("div",{style:m.closeButtonWrapperStyle},void 0,l()("div",{style:m.closeButtonStyle,onClick:o},void 0,r.Z.closeSmall({height:12,width:12}))),l()("div",{style:m.syncButtonStyle},void 0,r.Z.sync({height:32,width:32,color:m.aiPurpleColor.color})),l()("div",{style:m.headerStyle},void 0,v),h&&l()("div",{style:m.lightDescriptionTextStyle},void 0,h),l()("div",{style:m.mainDescriptionTextStyle},void 0,l()(s.FormattedMessage,{defaultMessage:"This will replace all existing values, including manual edits.",id:"database.viewSettings.propertyTab.aiAutofill.confirmOverwriteModal.willReplace"})),l()(u.Z,{style:m.confirmButtonWrap,onClick:a},void 0,l()("span",{style:m.confirmButton},void 0,S)),l()("div",{style:m.cancelButtonStyle,onClick:o},void 0,l()(s.FormattedMessage,{defaultMessage:"Cancel",id:"database.viewSettings.propertyTab.aiAutofill.confirmOverwriteModal.cancelButton"})))),[m.closeButtonWrapperStyle,m.closeButtonStyle,m.syncButtonStyle,m.aiPurpleColor.color,m.headerStyle,m.lightDescriptionTextStyle,m.mainDescriptionTextStyle,m.confirmButtonWrap,m.confirmButton,m.cancelButtonStyle,o,v,h,a,S]);return l()(c.Z,{open:t,render:w,onDismiss:o})}}}]);